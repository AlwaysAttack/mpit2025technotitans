/**
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { type HostComponent, type ViewProps } from 'react-native';
import type { LatLng } from '.';
import type { Circle, GroundOverlay, Marker, Polygon, Polyline } from '../maps';
import type { DirectEventHandler, Int32 } from 'react-native/Libraries/Types/CodegenTypesNamespace';
export declare const viewManagerName: string;
export declare const sendCommand: (viewId: number, command: number | undefined, args?: any[]) => void;
export declare const commands: {
    [key: string]: number;
};
export interface NativeNavViewProps extends ViewProps {
    flex?: number | undefined;
    fragmentType: Int32;
    stylingOptions?: unknown | undefined;
    onMapReady?: DirectEventHandler<null>;
    onMapClick?: DirectEventHandler<LatLng>;
    onMarkerClick?: DirectEventHandler<Marker>;
    onPolylineClick?: DirectEventHandler<Polyline>;
    onPolygonClick?: DirectEventHandler<Polygon>;
    onCircleClick?: DirectEventHandler<Circle>;
    onGroundOverlayClick?: DirectEventHandler<GroundOverlay>;
    onMarkerInfoWindowTapped?: DirectEventHandler<Marker>;
    onRecenterButtonClick?: DirectEventHandler<null>;
    onPromptVisibilityChanged?: DirectEventHandler<{
        visible: boolean;
    }>;
}
type NativeNavViewManagerComponentType = HostComponent<NativeNavViewProps>;
export declare const NavViewManager: NativeNavViewManagerComponentType;
export {};
//# sourceMappingURL=viewManager.d.ts.map