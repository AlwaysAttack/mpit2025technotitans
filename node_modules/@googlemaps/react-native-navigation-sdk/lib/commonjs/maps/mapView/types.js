"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MapType = exports.FragmentType = void 0;
/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Defines options for a Circle.
 */
/**
 * Defines MarkerOptions for a marker.
 */
/**
 * Defines PolygonOptions for a polygon.
 */
/**
 * Defines PolylineOptions for a Polyline.
 */
/**
 * Defines the styling of the base map.
 */
let MapType = exports.MapType = /*#__PURE__*/function (MapType) {
  /** No base map tiles. */
  MapType[MapType["NONE"] = 0] = "NONE";
  /** Default GoogleMap style - Basic maps. */
  MapType[MapType["NORMAL"] = 1] = "NORMAL";
  /** Satellite maps with a transparent layer of major streets. */
  MapType[MapType["SATELLITE"] = 2] = "SATELLITE";
  /** Shows the terrain of the map only. This map type does not work during navigation. */
  MapType[MapType["TERRAIN"] = 3] = "TERRAIN";
  /** Satellite maps with a transparent layer of major streets. */
  MapType[MapType["HYBRID"] = 4] = "HYBRID";
  return MapType;
}({});
/**
 * Defines the padding options for a map.
 */
/**
 * Defines the type of the map fragment.
 */
let FragmentType = exports.FragmentType = /*#__PURE__*/function (FragmentType) {
  /** Regular Google map view without navigation */
  FragmentType[FragmentType["MAP"] = 0] = "MAP";
  /** Google map view with navigation */
  FragmentType[FragmentType["NAVIGATION"] = 1] = "NAVIGATION";
  return FragmentType;
}({});
/**
 * `MapViewProps` interface provides a set of method definitions
 * for managing map events and debug information.
 */
//# sourceMappingURL=types.js.map